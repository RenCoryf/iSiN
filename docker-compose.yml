networks:
    app_net:
        driver: bridge

services:
    core:
        networks:
            - app_net
        build:
            context: .
            dockerfile: core/Dockerfile
        env_file:
            - .env
            - .env.core
        container_name: core
        restart: unless-stopped
        ports:
            - "8000:8000"
        volumes:
            - ./core:/app:cached
        depends_on:
            database:
                condition: service_healthy
        #        command: >
        #           sh -c "alembic upgrade head && python -m app.main"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
            interval: 15s
            timeout: 5s
            retries: 5

    # bot:
    #     build:
    #         context: .
    #         dockerfile: bot/Dockerfile
    #     env_file:
    #         - .env
    #         - .env.bot
    #     container_name: bot
    #     restart: unless-stopped
    #     ports:
    #         - "8080:8080"
    #     volumes:
    #         - ./bot:/app:cached
    #     depends_on:
    #         database:
    #             condition: service_healthy
    #         isin_core:
    #             condition: service_healthy

    database:
        networks:
            - app_net
        image: postgres:18
        container_name: database
        restart: unless-stopped
        env_file:
            - .env
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
                ]
            interval: 10s
            timeout: 5s
            retries: 10
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

volumes:
    postgres_data:
